version: '1.0'
networks:
  myapp:
    name: myapp
services:

  api:
    build: ./websocket_binance/
    ports:
      - "3000:3000"
    networks:
      - myapp

  zookeeper:
    image: 'bitnami/zookeeper:latest'
    container_name: myapp-zookeeper
    networks:
      - myapp
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: 'bitnami/kafka:latest'
    container_name: myapp-kafka
    networks:
      - myapp
    ports:
      - '9092:9092'
    environment:
      - KAFKA_BROKER_ID=1
      - 'KAFKA_LISTENERS=PLAINTEXT://:9092'
      - 'KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181'
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper

  # Spark Master
  spark:
    image: 'bitnami/spark:latest'
    container_name: myapp-spark-master
    networks:
      - myapp
    ports:
      - '8080:8080'
    environment:
      - SPARK_MODE=master
    volumes:
      - './spark:/opt/bitnami/spark/work'
#    command: sh -c "pip install -r requirements.txt && cd /opt/bitnami/spark/work && python script.py"

  spark_worker:
    image: 'bitnami/spark:latest'
    container_name: myapp-spark-worker
    networks:
      - myapp
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark:7077
    volumes:
      - './spark:/opt/bitnami/spark/work'
    
#   #elasticsearch 
#   elasticsearch: 
#     image: docker.elastic.co/elasticsearch/elasticsearch:7.16.1
#     ports:
#       - "9200:9200"
#       - "9300:9300"
#     environment:
#       - xpack.security.enabled=false
#       - discovery.type=single-node
#       - bootstrap.memory_lock=true
#       - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
#       - cluster.routing.allocation.disk.threshold_enabled=false
#     ulimits:
#       memlock:
#         soft: -1
#         hard: -1
#     networks:
#       - myapp
#     volumes:
#       - elastic_data:/usr/share/elasticsearch/data/
    
# #grafana
#   grafana:
#     image: grafana/grafana:latest
#     container_name: monitoring_grafana
#     restart: unless-stopped
#     ports:
#       - "3001:3000"
#     environment:
#       - GF_SECURITY_ADMIN_PASSWORD=12345
#     networks:
#       - myapp
#     volumes:
#       - grafana-data:/var/lib/grafana

# volumes:
#   elastic_data: {}
#   grafana-data: {}


